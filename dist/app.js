!function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";r.r(t);const n=new class{constructor(e){this.node=e,this.vdom=[]}virtualText(e){const t=e.nodeValue;if(/^\s+$/.test(t))return null;return{type:e.nodeType,content:t}}virtualElement(e){const t=Array.from(e.attributes).map(e=>[e.nodeName,e.nodeValue]);return{type:e.nodeType,tagName:e.tagName,props:[...t],content:this.getChildrenNode(e.childNodes)}}getChildrenNode(e=[]){const t=[];return Boolean(e.length)?(e.forEach(e=>{const r=this.distinguishDom(e);Boolean(r)&&t.push(r)}),t):t}distinguishDom(e){switch(e.nodeType){case 1:return this.virtualElement(e);case 3:return this.virtualText(e);default:return null}}startVirturalDom(){return this.node.childNodes.forEach(e=>{const t=this.distinguishDom(e);Boolean(t)&&this.vdom.push(t)}),this.vdom}}(document.body).startVirturalDom();console.log(n),console.log(n),new class{constructor({id:e,virtualNode:t}){this.id=e,this.virtualNode=t,this.content=null}createEleDom(e){let t=null;return t=document.createElement(e.tagName),e.props.map(e=>{let[r,n]=e;t.setAttribute(r,n)}),this.createChildrenDom(e.content,t)}createTextDom(e){let t=null;return t=document.createTextNode(e.content)}createChildrenDom(e,t){return e.forEach(e=>{t.appendChild(this.distinguishCreateDom(e))}),t}distinguishCreateDom(e){switch(e.type){case 1:return this.createEleDom(e);case 3:return this.createTextDom(e);default:return null}}createReallyDom(){this.content=document.querySelector(`#${this.id}`),this.virtualNode.forEach(e=>{this.content.appendChild(this.distinguishCreateDom(e))})}}({id:"really",virtualNode:n}).createReallyDom()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,